@page "/caixaindex"
@inherits AppVMC.ViewModels.CaixaViewModel

<style>
    body {
        background: rgb(245,237,240);
        background: radial-gradient(circle, rgba(245,237,240,1) 0%, rgb(164, 128, 128) 100%);
    }
</style>
<div class="wrapper container">
    <div class="container-fluid text-right">
        <h3>Caixa - Controle de Lançamentos</h3>
    </div>
    <div class="row form-group">
        <p>
            <label><MatH5>Movimento do dia: @DateTime.Now.ToShortDateString()</MatH5></label>
        </p>
        <div class="col">
            <p>
                <label><MatH6>Saldo do dia anterior: @esteCaixa.SaldoAnterior.ToString("c")</MatH6></label>
            </p>
        </div>
        <div class="col">
            <p>
                <label><MatH6>Saldo Atual: @esteCaixa.SaldoAtual.ToString("c")</MatH6></label>
            </p>
        </div>
    </div>
    <div class="row container-fluid text-right">
        <MatButton Label="Novo Lançamento" @onclick="NovoLancamento"/>
        <button class="btn btn-info" @onclick="@(()=>{ OpenPage("/novolanctocaixa"); })">Adicionar Novo Lançamento</button>
    </div>

    <hr />
    <div class="row">
        @if (caixaList.Count > 0)
        {
            <GridData Caption="Movimentos do Caixa"
                      THeadClass="alert-success"
                      Items="caixaList"
                      AlturaGrid="350px"
                      LarguraGrid="600px"
                      PageSize="10">
                <GridHeader>
                    <th scope="col" class="text-right">Data</th>
                    <th scope="col" class="text-center">Saldo Inicial</th>
                    <th scope="col" class="text-right">Saldo Final</th>
                    <th scope="col" class="text-center">Qtde Lanctos</th>
                    <th scope="col" class="text-center">
                        Observações
                    </th>
                    <th scope="col" class="text-center">Ações</th>
                </GridHeader>
                <GridRow>
                    <td scope="row" class="text-right">@context.DataMovimento.ToShortDateString())</td>
                    <td scope="row" class="text-center">@context.SaldoAnterior</td>
                    <td scope="row" class="text-right">@context.SaldoAtual.ToString("c")</td>
                    <td scope="row" class="text-center">@context.Lancamentos.Count()</td>
                    <td scope="row" class="text-center">Ver Extrato</td>
                    <td scope="row" class="text-center">Editar</td>
                    <td scope="row" class="text-center">Excluir</td>
                </GridRow>
            </GridData>
        }
    </div>
</div>

@code{
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await Task.FromResult(AbrirCaixa());
        lanctoCaixaList = await ServiceCaixa.GetLancamentoByMovimento(esteCaixa.Id);
        StateHasChanged();
    }
}