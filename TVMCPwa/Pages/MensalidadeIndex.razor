@page "/mensalidadeindex"
@inherits TVMCPwa.ViewModels.MensalidadeViewModel
<style>
    body {
        background: rgb(245,237,240);
        background: radial-gradient(circle, rgba(245,237,240,1) 0%, rgb(154, 154, 154) 100%);
    }
</style>
<div class="wrapper container">

    <div class="container-fluid text-right">
        <h3>Mensalidades</h3>
    </div>

    <div class="container-fluid text-right">
        <button class="btn btn-primary" @onclick="GerarMensalidade">Nova Mensalidade</button>
    </div>
    <br />
    <div class="row">
        <SearchField @bind-BindingValue="@textoProcura"
                     Placeholder="Digite uma parte do nome, ex.: maria jo"
                     SearchAction="@(async () => { await BuscarMensalidadeContendoTexto(textoProcura); })"
                     ClearAction="@(async () => { await ClearSearch(); })" />
    </div>
    <br/>
    <div class="row">
        <div class="input-group">
            <label for="selectTipo" class="form-control">
                Mês para filtrar
            </label>
            <select id="setectTipo" @bind="@mesFiltro" class="custom-select my-select">
                <option value="" class="text-md-center">Selecione...</option>
                @foreach (var cnt in mesRefList)
                {
                    <option value="@cnt" class="text-md-left">@cnt.ToString()</option>
                }
            </select>
            <div class="input-group-append">
                <button type="button" class="btn btn-light" disabled>|</button>
                <button type="button" class="btn btn-sm btn-info" @onclick="FiltrarLista">Filtrar</button>
                <button type="button" class="btn btn-sm btn-danger" @onclick="LimparFiltro">Limpar Filtro</button>
            </div>
        </div>
    </div>


    @if (mensalidadeList.Count > 0)
    {
        <DataGrid Caption="Relação das Mensalidades"
                  THeadClass="alert-primary"
                  Items="mensalidadeList"
                  AlturaGrid="350px"
                  LarguraGrid="600px"
                  PageSize="10">
            <GridHeader>
                <th scope="col">Referência</th>
                <th scope="col">Afiliado</th>
                <th scope="col">Vencimento</th>
                <th scope="col">Valor Mensalidade</th>
                <th scope="col" class="text-center">Pago</th>
                <th scope="col" class="text-center">Valor Pago</th>
                <th scope="col" class="text-center">Data Pagamento</th>
                <th scope="col" colspan="3" class="text-center">Ações</th>
            </GridHeader>
            <GridRow>
                <td scope="row" class="text-center">@context.MensalidadeReferencia</td>
                <td scope="row" class="text-truncate">@context.NomeAfiliado</td>
                <td scope="row" class="text-center">@context.DataVencimento.ToShortDateString()</td>
                <td scope="row">@context.ValorMensalidade.ToString("c")</td>

                <td scope="row" class="text-center">
                    <input type="checkbox" @bind="@context.Pago" onclick="return false;">
                </td>
                <td scope="row">@context.ValorPago.ToString("c")</td>
                <td scope="row">@(context.DataPagamento == DateTime.MinValue ? "" : context.DataPagamento.ToShortDateString())</td>
                <td class="text-right" scope="col" title="@($"Baixar Mensalidade ID:{context.Id}")">
                    <MatIconButton @onclick="@(async () => { await BaixarMensalidade(@context.Id); })">
                        <MatIcon Id="edit-button" Style="color:#184a03">@MatIconNames.Payment</MatIcon>
                    </MatIconButton>
                </td>
                <td class="text-right" scope="col" title="@($"Editar Mensalidade ID:{context.Id}")">
                    <MatIconButton @onclick="@(async () => { await EditarMensalidade(@context.Id); })">
                        <MatIcon Id="edit-button" Style="color:mediumblue">@MatIconNames.Edit</MatIcon>
                    </MatIconButton>
                </td>
                <td class="text-left" scope="col" title="@($"Excluir Mensalidade ID:{context.Id}")">
                    <MatIconButton Id="delete-button" @onclick="@(async () => { await ExcluirMensalidade(@context.Id); })">
                        <MatIcon Style="color:red">@MatIconNames.Delete</MatIcon>
                    </MatIconButton>
                </td>
            </GridRow>
        </DataGrid>
    }
</div>
<div class="wrapper"></div>
@code{

    string mesFiltro;

    void FiltrarLista()
    {
        mensalidadeList.Clear();
        mensalidadeList.AddRange(mensalidades.Where(w => w.MensalidadeReferencia.Contains(mesFiltro)).ToList());
        StateHasChanged();

    }

    void LimparFiltro()
    {
        mensalidadeList.Clear();
        mensalidadeList.AddRange(mensalidades);
        StateHasChanged();
    }

}